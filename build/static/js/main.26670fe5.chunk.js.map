{"version":3,"sources":["API.ts","components/QuestionCard.styles.ts","components/QuestionCard.tsx","components/InformativeCard.tsx","static/olgamain.jpg","App.styles.ts","App.tsx","index.tsx"],"names":["Difficulty","fetchQuizQuestions","amount","difficulty","a","endpoint","fetch","json","data","results","map","question","answers","array","incorrect_answers","correct_answer","sort","Math","random","Wrapper","styled","div","ButtonWrapper","correct","userClicked","QuestionCard","callback","userAnswer","questionNr","totalQuestions","className","dangerouslySetInnerHTML","__html","answer","correctAnswer","disabled","value","onClick","InformationContainer","InformativeCard","GlobalStyle","createGlobalStyle","BGImage","App","useState","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","EASY","newQuestions","length","undefined","e","currentTarget","prev","answerObject","TOTAL_QUESTIONS","nextQ","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26670fe5.chunk.js","sourcesContent":[" export const shuffleArray = (array: any[]) =>\n  [...array].sort(() => Math.random() - 0.5);\n\nexport type Question = {\n  category: string;\n  correct_answer: string;\n  difficulty: string;\n  incorrect_answers: string[];\n  question: string;\n  type: string;\n};\n\nexport enum Difficulty {\n  EASY = \"easy\",\n  MEDIUM = \"medium\",\n  HARD = \"hard\",\n}\n\nexport type QuestionsState = Question & { answers: string[] };\n\nexport const fetchQuizQuestions = async (amount: number, difficulty: Difficulty): Promise<QuestionsState[]> => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple&category=27`;\n  const data = await (await fetch(endpoint)).json();\n  return data.results.map((question: Question) => ({\n    ...question,\n    answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n  }))\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  max-width: 1100px;\n  background: #ebe8e7;\n  border-radius: 10px;\n  border: 2px solid #0085a3;\n  padding: 20px;\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n  text-align: flex-start;\n  p {\n    font-size: 1rem;\n  }\n`;\n// button types\ntype ButtonWrapperProps = {\n  correct: boolean;\n  userClicked: boolean;\n};\n\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\n  transition: all 0.3s ease;\n  :hover {\n    opacity: 0.8;\n  }\n  button {\n    cursor: pointer;\n    user-select: none;\n    font-size: 0.8rem;\n    width: 100%;\n    height: 40px;\n    margin: 5px 0;\n    background: ${({ correct, userClicked }) =>\n      correct\n        ? \"linear-gradient(90deg, #56FFA4, #59BC86)\"\n        : !correct && userClicked\n        ? \"linear-gradient(90deg, #FF5656, #C16868)\"\n        : \"linear-gradient(90deg, #56ccff, #6eafb4)\"};\n    border: 3px solid #ffffff;\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n    color: #fff;\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\n  }\n`;\n","import React from 'react';\n// Types\nimport { AnswerObject } from '../App';\n// Styles\nimport { Wrapper, ButtonWrapper } from './QuestionCard.styles';\n\ntype Props = {\n  question: string;\n  answers: string[];\n  callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  userAnswer: AnswerObject | undefined;\n  questionNr: number;\n  totalQuestions: number;\n};\n\nconst QuestionCard: React.FC<Props> = ({\n  question,\n  answers,\n  callback,\n  userAnswer,\n  questionNr,\n  totalQuestions,\n}) => (\n  <Wrapper>\n    <p className='number'>\n      Question: {questionNr} / {totalQuestions}\n    </p>\n    <p dangerouslySetInnerHTML={{ __html: question }} />\n    <div>\n      {answers.map((answer) => (\n        <ButtonWrapper\n          key={answer}\n          correct={userAnswer?.correctAnswer === answer}\n          userClicked={userAnswer?.answer === answer}\n        >\n          <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\n            <span dangerouslySetInnerHTML={{ __html: answer }} />\n          </button>\n        </ButtonWrapper>\n      ))}\n    </div>\n  </Wrapper>\n);\n\nexport default QuestionCard;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n// const InformationBackground = styled.div`\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   width: 100w;\n//   height: 100vh;\n//   backdrop-filter: blur(2px);\n//   background-color: rgba(0, 0, 0, 0.2);\n//   display: flex-start;\n//   flex-flow: row nowrap;\n//   justify-content: center;\n//   align-items: center;\n// `;\n\nconst InformationContainer = styled.div`\n  height: 50vh;\n  width: 30vw;\n  position: absolute;\n  left: 100px;\n  bottom: 400px;\n  display: flex-start;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #EBE8E7;\n  background-blur 5px;\n  border-radius: 10px;\n border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  overflow: auto;\n    border-width: 1;\n  border-radius: 2;\n  border-color: #ddd;\n  border-bottom-width: 0;\n  shadow-color: #000;\n  shadow-offset: {width: 0, height: 2};\n  shadow-opacity: 0.8;\n  shadow-radius: 2;\n  elevation: 1;\n  margin-left: 5;\n  margin-right: 5;\n  margin-top: 10;\n`;\n\n\n\nconst InformativeCard = () => {\n  return (\n    <InformationContainer>\n      <div>\n        <h1> What Are The Benefits Of Adopting From A Shelter? </h1>\n        <p> There are many advantages of adopting a rescue dog that you and your family can enjoy.</p>\n        <h2>1. You’re Saving A Life </h2>\n        <p>Adopting a dog from a shelter not only means that you’re giving him a happy life, but you also free up a spot at the rescue or shelter to save another dog’s life. </p>\n        <h3>2. You Can Find A Fully Trained Dog </h3>\n        <p>Don’t know much about training a puppy or don’t have the patience? You can find an adult rescue dog who’s already house trained and has his basic manners down pat. But if you’re up to the challenge, a rescue can find you a puppy as well. </p>\n      </div>\n    </InformationContainer>\n  );\n}\n\nexport default InformativeCard;\n","export default __webpack_public_path__ + \"static/media/olgamain.25258a58.jpg\";","import styled, { createGlobalStyle } from \"styled-components\";\nimport BGImage from \"./static/olgamain.jpg\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n  body {\n    background-image: url(${BGImage});\n    background-size: cover;\n    margin: 10px 50px;\n    padding: 0 20px;\n    display: flex;\n    justify-content: center;\n  }\n  * {\n    font-family: 'Catamaran', sans-serif;\n    box-sizing: border-box;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  > p {\n    color: #fff;\n  }\n  .score {\n    color: #ebe8e7;\n    font-size: 2rem;\n    margin: 0;\n  }\n  h1 {\n    font-family: Fascinate Inline;\n    background-image: linear-gradient(180deg, #484848, #ebe8e7);\n    font-weight: 400;\n    background-size: 100%;\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    -moz-background-clip: text;\n    -moz-text-fill-color: transparent;\n    filter: drop-shadow(2px 2px #ff5a5f);\n    font-size: 70px;\n    text-align: center;\n    margin: 20px;\n  }\n  .start,\n  .next {\n    cursor: pointer;\n    background: linear-gradient(180deg, #ffffff, #484848);\n    border: 2px solid #d38558;\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\n    border-radius: 10px;\n    height: 40px;\n    margin: 20px 0;\n    padding: 0 40px;\n  }\n  .start {\n    max-width: 200px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { fetchQuizQuestions } from './API';\n// Components\nimport QuestionCard from './components/QuestionCard';\nimport InformativeCard from './components/InformativeCard';\n\n// types\nimport { QuestionsState, Difficulty } from './API';\n// Styles\nimport { GlobalStyle, Wrapper } from './App.styles';\n// typechecking on answers\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n// useState hooks\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionsState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: any) => {\n    if (!gameOver) {\n      // User's answer\n      const answer = e.currentTarget.value;\n      // Check answer against correct answer\n      const correct = questions[number].correct_answer === answer;\n      // Add score if answer is correct\n      if (correct) setScore((prev) => prev + 1);\n      // Save the answer in the array for user answers\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    // Move on to the next question if not the last question\n    const nextQ = number + 1;\n\n    if (nextQ === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQ);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <InformativeCard />\n      <Wrapper>\n        <h1>Animal Quiz!</h1>\n        {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n          <button className=\"start\" onClick={startTrivia}>\n            Start\n          </button>\n        ) : null}\n        {!gameOver ? <p className=\"score\">Score: {score}</p> : null}\n        {loading ? <p>Loading Questions...</p> : null}\n        {!loading && !gameOver && (\n          <QuestionCard\n            questionNr={number + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[number].question}\n            answers={questions[number].answers}\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\n            callback={checkAnswer}\n          />\n        )}\n        {!gameOver &&\n        !loading &&\n        userAnswers.length === number + 1 &&\n        number !== TOTAL_QUESTIONS - 1 ? (\n          <button className=\"next\" onClick={nextQuestion}>\n            Next Question\n          </button>\n        ) : null}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}